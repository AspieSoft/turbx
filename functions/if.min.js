module.exports=function({runFunc:e,getOpt:t}){return{name:"if",func:function(r,a,c,i,n,s=!1){let u,m=s;if(!r.length)return a;for(let e=0;e<r.length;e++){if("&"===r[e]){if(m)continue;break}if("|"===r[e]){if(m)break;continue}let a,i,n;if(r[e+1]&&r[e+1].match(/^[!<>]?=|[<>]$/))a=r[e],i=r[e+1],n=r[e+2],u=a;else{if(!r[e].match(/^[!<>]?=|[<>]$/)||!r[e+1]){if(1===r.length){let i=!0;r[e].startsWith("!")&&(i=!1),"!"===r[e]?(a=r[e+1],e++):"!!"===r[e]?(a=r[e+1],e++,i=!0):a=r[e].replace("!",""),a.startsWith("!")&&(i=!i,a=a.replace("!","")),u=a,a.match(/^["'`].*["'`]$/)?(a=a.replace(/^["'`](.*)["'`]$/,"$1"),Number.isNaN(Number(a))||(a=Number(a))):a=a.match(/^-?[0-9]+(\.[0-9]+|)$/)?Number(a):t(c,a,!1),m=!a&&0!==a||""===a||Array.isArray(a)&&!a.length||"object"==typeof a&&!Object.keys(a).length,i&&(m=!m);continue}continue}a=u,i=r[e],n=r[e+1],e++}switch(a.match(/^["'`].*["'`]$/)?(a=a.replace(/^["'`](.*)["'`]$/,"$1"),Number.isNaN(Number(a))||(a=Number(a))):a.match(/^-?[0-9]+(\.[0-9]+|)$/)?a=Number(a):(a=t(c,a,!1),"string"==typeof a&&a.match(/^-?[0-9]+(\.[0-9]+|)$/)&&(a=Number(a))),n?n.match(/^["'`].*["'`]$/)?(n=n.replace(/^["'`](.*)["'`]$/,"$1"),Number.isNaN(Number(n))||(n=Number(n))):n.match(/^-?[0-9]+(\.[0-9]+|)$/)?n=Number(n):(n=t(c,n,!1),"string"==typeof n&&n.match(/^-?[0-9]+(\.[0-9]+|)$/)&&(n=Number(n))):n=void 0,u=a,i){case"=":m=a===n;break;case"!=":case"!":m=a!==n;break;case">=":m=a>=n;break;case"<=":m=a<=n;break;case">":m=a>n;break;case"<":m=a<n}e+=2}let b=a.match(new RegExp(`<_el(if|se):${i}(\\s+[0-9]+|)/>`));return b&&m?a.substring(0,b.index):b?e("if",n.args[b[2].trim()],a.substring(b.index+b[0].length),c,i,n,"se"===b[1]):m?a:""}}};